{"ast":null,"code":"var _jsxFileName = \"C:\\\\BootCamp\\\\Jinsa-Repos\\\\React-portfolio\\\\src\\\\components\\\\Header.js\";\nimport React from 'react';\nimport '../styles/Header.css'; // By importing the Header.css file, it is added to the DOM whenever this component loads\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  headerStyle: {\n    background: 'blue'\n  },\n  headingStyle: {\n    fontSize: '100px'\n  }\n}; // We use JSX curly braces to evaluate the style object\n\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    style: styles.headerStyle,\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.headingStyle,\n      children: \"Jinsa Sameer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","styles","headerStyle","background","headingStyle","fontSize","Header"],"sources":["C:/BootCamp/Jinsa-Repos/React-portfolio/src/components/Header.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/Header.css';\r\n\r\n// By importing the Header.css file, it is added to the DOM whenever this component loads\r\n\r\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\r\n// Unlike regular HTML, a JSX style property must be an object instead of a string\r\n// On a style object, we camelCase all property names, and put all of the values in quotes\r\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\r\n\r\nconst styles = {\r\n  headerStyle: {\r\n    background: 'blue',\r\n  },\r\n  headingStyle: {\r\n    fontSize: '100px',\r\n  },\r\n};\r\n\r\n// We use JSX curly braces to evaluate the style object\r\n\r\nfunction Header() {\r\n  return (\r\n    <header style={styles.headerStyle} className=\"header\">\r\n      <h1 style={styles.headingStyle}>Jinsa Sameer</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP,C,CAEA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,MAAM,GAAG;EACbC,WAAW,EAAE;IACXC,UAAU,EAAE;EADD,CADA;EAIbC,YAAY,EAAE;IACZC,QAAQ,EAAE;EADE;AAJD,CAAf,C,CASA;;AAEA,SAASC,MAAT,GAAkB;EAChB,oBACE;IAAQ,KAAK,EAAEL,MAAM,CAACC,WAAtB;IAAmC,SAAS,EAAC,QAA7C;IAAA,uBACE;MAAI,KAAK,EAAED,MAAM,CAACG,YAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;KANQE,M;AAQT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}